{"version":3,"sources":["bubble-background/bubble-background.ts"],"names":["Bubble","[object Object]","this","point","x","y","randomize","first_time","Math","random","speed","radius","opacity","BubbleBackground","HTMLElement","super","shadow","ctx","canvas","bubbles","_number","attachShadow","mode","style","document","createElement","innerHTML","styles","appendChild","getContext","window","onresize","matchResolution","i","push","render","width","innerWidth","height","innerHeight","clearRect","globalCompositeOperation","forEach","bubble","index","r","min","beginPath","fillStyle","arc","PI","fill","requestAnimationFrame","drawBubbles","number","val","setAttribute","toString","observedAttributes","name","old_val","new_val","max","Number","console","warn","customElements","define","e"],"mappings":"AAmBA,MAAMA,EAMJC,cALOC,KAAAC,MAAe,CAACC,EAAG,EAAGC,EAAG,GAM9BH,KAAKI,UAAU,GAGjBL,UAAUM,EAAsB,GAE9BL,KAAKC,MAAMC,EAAII,KAAKC,SACpBP,KAAKC,MAAME,EAAIG,KAAKC,SAGhBF,IACAL,KAAKC,MAAME,EAAI,EAAKH,KAAKC,MAAME,EAAI,IAIvCH,KAAKQ,OAASF,KAAKC,SAAW,KAAQ,IAMtCP,KAAKS,OAASH,KAAKC,SAGnBP,KAAKU,QAAUJ,KAAKC,SAAW,IAKnC,MAAMI,UAAyBC,YAc3Bb,cACIc,QAdIb,KAAAc,OAA2B,KAG3Bd,KAAAe,IAAgC,KAChCf,KAAAgB,OAA4B,KAG5BhB,KAAAiB,QAAyB,GACzBjB,KAAAkB,QAAkB,IAStBlB,KAAKc,OAASd,KAAKmB,aAAa,CAACC,KAAM,SAGvC,MAAMC,EAAQC,SAASC,cAAc,SACrCF,EAAMG,UAAYb,EAAiBc,OACnCzB,KAAKc,OAAOY,YAAYL,GAGxBrB,KAAKgB,OAASM,SAASC,cAAc,UACrCvB,KAAKe,IAASf,KAAKgB,OAAOW,WAAW,MACrC3B,KAAKc,OAAOY,YAAY1B,KAAKgB,QAG7BY,OAAOC,SAAW7B,KAAK8B,gBAG3B/B,oBAEIC,KAAK8B,kBAGL,IAAI,IAAIC,EAAI,EAAGA,EAAI/B,KAAKkB,QAASa,IAC7B/B,KAAKiB,QAAQe,KAAK,IAAIlC,GAI1BE,KAAKiC,SAITlC,kBACIC,KAAKgB,OAAOkB,MAAQN,OAAOO,WAC3BnC,KAAKgB,OAAOoB,OAASR,OAAOS,YAIhCtC,YAAYkB,EAAwBF,GAEhCA,EAAIuB,UAAU,EAAG,EAAGtC,KAAKgB,OAAOkB,MAAOlC,KAAKgB,OAAOoB,QAGnDrB,EAAIwB,yBAA2B,UAE/BtB,EAAQuB,QAAQ,CAACC,EAAQC,KACrB,MAAMxC,EAAIuC,EAAOxC,MAAMC,EAAIF,KAAKgB,OAAOkB,MACjC/B,EAAIsC,EAAOxC,MAAME,EAAIH,KAAKgB,OAAOoB,OACjCO,EAAIF,EAAOhC,QAAU,IAAOH,KAAKsC,IAAI5C,KAAKgB,OAAOkB,MAAO,MAG9DnB,EAAI8B,YACJ9B,EAAI+B,iCAAmCL,EAAO/B,WAC9CK,EAAIgC,IAAI7C,EAAGC,EAAGwC,EAAG,EAAc,EAAVrC,KAAK0C,GAAS,GACnCjC,EAAIkC,OAGDR,EAAOxC,MAAME,GAAK,IACjBsC,EAAOrC,YAGPqC,EAAOxC,MAAME,GAAKsC,EAAOjC,QAMrCT,SACImD,sBAAsB,KAClBlD,KAAKiC,WAETjC,KAAKmD,YAAYnD,KAAKiB,QAASjB,KAAKe,KAIxCqC,aACI,OAAOpD,KAAKkB,QAGhBkC,WAAWC,GACPrD,KAAKsD,aAAa,SAAUD,EAAIE,YAIpCC,gCACI,MAAO,CAAC,UAGZzD,yBAAyB0D,EAAcC,EAAiBC,GACpD,OAAQF,GACJ,IAAK,SACDzD,KAAKkB,QAAUZ,KAAKsC,IAAItC,KAAKsD,IAAI,EAAGC,OAAOF,IAAW,KACtD,MACJ,QACIG,QAAQC,sCAAsCN,mDAlG3C9C,EAAAc,OAAS,0CAwG5B,IACIG,OAAOoC,eAAeC,OAAO,oBAAqBtD,GACpD,MAAMuD,GACJJ,QAAQC,KAAK","file":"../../bubble-background/bubble-background.js","sourcesContent":["/* BubbleBackground\n * Usage: <bubble-background number=\"X\"><'/bubble-backgroung>\n * Adds a canvas to the DOM that expands to fill the width and height of the\n * parent. Draws up to X number of bubbles of different sizes that float toward\n * the top of the screen.\n *\n * Recommended to add a radial gradient to the parent element to give a 'deep\n * sea' look.\n * Example:\n * body { background: radial-gradient(circle, #04619F 0%, #111 95%); }\n*/\n\n/* Used to keep track of where a bubble is located on the canvas */\ninterface Point {\n    x: number;\n    y: number;\n}\n\n/* Bubbles! */\nclass Bubble {\n  public point: Point = {x: 0, y: 0};\n  public speed: number;\n  public radius: number;\n  public opacity: number;\n\n  constructor() {\n    this.randomize(true);\n  }\n\n  randomize(first_time: boolean = false): void {\n    /* Coordinates are a % of page width/height */\n    this.point.x = Math.random();\n    this.point.y = Math.random();\n\n    /* On subsequent randomizations, start below the page */\n    if(!first_time) {\n        this.point.y = 1 + (this.point.y / 10);\n    }\n    \n    /* Speed ranges from 0.25% to 1.5% of page height per frame */\n    this.speed = (Math.random() + 0.25) / 100;\n\n    /* Bubbles range from 0 to 3% of the page width in radius, this calculation\n     * done in the BubbleBackground element since it knows the dimensions of the \n     * canvas.\n    */\n    this.radius = Math.random();\n\n    /* Opacity ranges from 0 to 10% */\n    this.opacity = Math.random() / 10;\n  }\n}\n\n/* The eponymous web component */\nclass BubbleBackground extends HTMLElement {\n    private shadow: DocumentFragment = null;\n\n    /* Canvas */\n    private ctx: CanvasRenderingContext2D = null;\n    private canvas: HTMLCanvasElement = null;\n\n    /* State */\n    private bubbles: Array<Bubble> = [];\n    private _number: number = 300;\n\n    /* Minified styles injected here */\n    private static styles = `[ inject-inline bubble-background.css ]`;\n\n    constructor() {\n        super();\n\n        /* Attach Shadow Root */\n        this.shadow = this.attachShadow({mode: 'open'});\n\n        /* Add Styling */\n        const style = document.createElement('style');\n        style.innerHTML = BubbleBackground.styles;\n        this.shadow.appendChild(style);\n\n        /* Add Canvas */\n        this.canvas = document.createElement('canvas');\n        this.ctx    = this.canvas.getContext('2d');\n        this.shadow.appendChild(this.canvas);\n\n        /* Resize the canvas when the window resizes */\n        window.onresize = this.matchResolution;\n    }\n\n    connectedCallback() {\n        /* Size the canvas correctly */\n        this.matchResolution();\n\n        /* Create the bubbles */\n        for(let i = 0; i < this._number; i++) {\n            this.bubbles.push(new Bubble());\n        }\n\n        /* Begin rendering */\n        this.render();\n    }\n\n    /* Sets the resolution of the canvas to the window's viewport */\n    matchResolution(): void {\n        this.canvas.width = window.innerWidth;\n        this.canvas.height = window.innerHeight;\n    }\n\n    /* Draws the bubbles to the canvas and updates their positions */\n    drawBubbles(bubbles: Array<Bubble>, ctx: CanvasRenderingContext2D): void {\n        /* Clear the canvas */\n        ctx.clearRect(0, 0, this.canvas.width, this.canvas.height);\n\n        /* When shapes overlap, their RGB values are _added_ */\n        ctx.globalCompositeOperation = 'lighter';\n\n        bubbles.forEach((bubble, index) => {\n            const x = bubble.point.x * this.canvas.width;\n            const y = bubble.point.y * this.canvas.height;\n            const r = bubble.radius * (0.03 * Math.min(this.canvas.width, 300));\n\n            /* Render the bubble */\n            ctx.beginPath();\n            ctx.fillStyle = `rgba(255, 255, 255, ${bubble.opacity})`;\n            ctx.arc(x, y, r, 0, (Math.PI * 2), false);\n            ctx.fill();\n\n            /* Replace the bubble when it leaves the view */\n            if(bubble.point.y < -0.05) {\n                bubble.randomize(); \n            } else {    \n                /* Update the bubble's position */\n                bubble.point.y -= bubble.speed;\n            }\n        });\n    }\n    \n    /* Begin the animation loop */\n    render(): void {\n        requestAnimationFrame(() => {\n            this.render();\n        });\n        this.drawBubbles(this.bubbles, this.ctx);\n    }\n\n    /* SETTERS & GETTERS */\n    get number() {\n        return this._number;\n    }\n\n    set number(val: number) {\n        this.setAttribute('number', val.toString());\n    }\n\n    /* Reflexive Attributes */\n    static get observedAttributes() {\n        return ['number'];\n    }\n\n    attributeChangedCallback(name: string, old_val: string, new_val: string): void {\n        switch (name) {\n            case 'number':\n                this._number = Math.min(Math.max(0, Number(new_val)), 500);\n                break;\n            default:\n                console.warn(`[BubbleBackground] Attribute '${name}' set but does not exist on BubbleBackground`);\n        }\n    }\n}\n\n/* Self register the element */\ntry {\n    window.customElements.define(\"bubble-background\", BubbleBackground);\n} catch(e) {\n    console.warn(`BubbleBackground Custom Element already exists`);\n}\n"]}